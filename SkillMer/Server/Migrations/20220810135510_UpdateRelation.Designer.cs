// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillMa.EntityFramework;

#nullable disable

namespace SkillMer.Server.Migrations
{
    [DbContext(typeof(SkillMerDbContext))]
    [Migration("20220810135510_UpdateRelation")]
    partial class UpdateRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("SkillMer.Shared.Entities.MJob", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(98);

                    b.Property<bool>("DeleteFlg")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(97);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(99);

                    b.HasKey("JobId");

                    b.ToTable("m_job", (string)null);
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.MSkill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(98);

                    b.Property<bool>("DeleteFlg")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(97);

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(99);

                    b.HasKey("SkillId");

                    b.ToTable("m_skill", (string)null);
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.MUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(15)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(98);

                    b.Property<bool>("DeleteFlg")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(97);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(99);

                    b.HasKey("UserId");

                    b.ToTable("m_user", (string)null);
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.TUsersJob", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(15)")
                        .HasColumnOrder(1);

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(98);

                    b.Property<bool>("DeleteFlg")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(97);

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(99);

                    b.HasKey("UserId", "JobId");

                    b.HasIndex("JobId");

                    b.ToTable("t_usersJob", (string)null);
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.TUsersSkill", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(15)")
                        .HasColumnOrder(1);

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(98);

                    b.Property<bool>("DeleteFlg")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(97);

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(99);

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("t_usersSkill", (string)null);
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.TUsersJob", b =>
                {
                    b.HasOne("SkillMer.Shared.Entities.MJob", "Job")
                        .WithMany("Users")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMer.Shared.Entities.MUser", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.TUsersSkill", b =>
                {
                    b.HasOne("SkillMer.Shared.Entities.MSkill", "Skill")
                        .WithMany("Users")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillMer.Shared.Entities.MUser", "User")
                        .WithMany("Skills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.MJob", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.MSkill", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkillMer.Shared.Entities.MUser", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
